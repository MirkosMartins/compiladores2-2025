# -*- coding: utf-8 -*-
"""AFD.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RS5bdEVDJQRM-hc3FPSKU9fytzKv6Z1V
"""

import pandas as pd

class AFD:
  estados = []
  simbolos = []
  estadoInicial = ''
  estadosFinais = []
  regrasTransicao = []
  #construtor do AFD
  def __init__(self,arqConfiguracao):
    linhas = arqConfiguracao.readlines()
    if len(linhas)<5:
      print ('Erro')
      return 0
    else:
        self.estados = linhas[0].rstrip().split(',')
        self.simbolos = linhas[1].rstrip().split(',')
        self.estadoInicial = linhas[2].rstrip()
        self.estadosFinais = linhas[3].rstrip().split(',')
        for i in linhas[4:]:
            #EFB
            self.regrasTransicao += i.rstrip().split(',')
        self._regra_virgula()
  
  def _regra_virgula(self):
        self.regrasTransicao.append("q0:,:q7")
        self.simbolos.append(',')

  def reconhece(self,palavra):
    if len(self.regrasTransicao)>0:
        for caracter in palavra.rstrip():
            if caracter not in self.simbolos:
                print('Símbolo não reconhecido pelo AFD!')
                return 0
        estadoAtual = self.estadoInicial
        for caracter in palavra.rstrip():
            reconhecido=False
            for regra in self.regrasTransicao:
                if regra.startswith(estadoAtual+':'+caracter):
                    estadoAtual = regra.split(':')[2]
                    reconhecido = True
                    break

            if not reconhecido:
                print("Não reconhecido")
                return
       
      #vou buscar se o estadoAtual é um dos estados Finais!
        for ef in self.estadosFinais:
            if ef.startswith(estadoAtual):
                # print('Símbolo',palavra,'reconhecido como',ef.split(':')[1])
                return [palavra, ef.split(':')[1]]
    else:
        print('não iniciado')
        return 0


arquivo = open('config.txt')
afd = AFD(arquivo)
# termo = input('Digite algo para reconhecer no AFD:')
code = open("code.c").readlines()
print(code)
tabela = pd.DataFrame(columns=["ID","token","tipo","l","c"])
i=0
for termo in code:
    i+=1
    result = afd.reconhece(termo)
    tb = pd.DataFrame({
        "ID": [i],
        "token": [result[0]],
        "tipo": [result[1]],
        "l": [i],
        "c": ["-"],
    })
    tabela = pd.concat([tabela, tb], ignore_index=True)

tabela.to_csv("tab-simbolos.csv")